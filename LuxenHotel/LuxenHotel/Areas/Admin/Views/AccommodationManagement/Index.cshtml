@model IEnumerable<LuxenHotel.Models.ViewModels.Booking.AccommodationViewModel>

@section Styles {
    @Html.LibStyle("datatables/datatables.bundle.css")
}

@section Scripts {
    @Html.LibScript("datatables/datatables.bundle.js")
    @Html.CdnScript("https://cdn.jsdelivr.net/npm/sweetalert2@11")

    <script>
        "use strict";

        var KTAppAccommodations = (function () {
            var tableElement, dataTable;

            var initDeleteRow = () => {
                tableElement.querySelectorAll('[data-kt-accommodation-filter="delete_row"]').forEach((button) => {
                    button.addEventListener("click", function (e) {
                        e.preventDefault();
                        const row = e.target.closest("tr");
                        const accommodationName = row.querySelector('[data-kt-accommodation-filter="accommodation_name"]')?.innerText ?? 'this accommodation';

                        Swal.fire({
                            title: "Are you sure?",
                            text: `Do you want to delete ${accommodationName}?`,
                            icon: "warning",
                            showCancelButton: true,
                            confirmButtonText: "Yes, delete it!",
                            cancelButtonText: "Cancel",
                            customClass: {
                                confirmButton: "btn btn-danger",
                                cancelButton: "btn btn-secondary"
                            }
                        }).then((result) => {
                            if (result.isConfirmed) {
                                dataTable.row($(row)).remove().draw();

                                Swal.fire({
                                    icon: "success",
                                    title: "Deleted!",
                                    text: `${accommodationName} has been deleted.`,
                                    confirmButtonText: "OK",
                                    customClass: {
                                        confirmButton: "btn btn-primary"
                                    }
                                });
                            }
                        });
                    });
                });
            };


            return {
                init: function () {
                    // Initialize table and DataTable
                    const tableId = "#kt_ecommerce_products_table";
                    tableElement = document.querySelector(tableId);

                    dataTable = new DataTable(tableId, {
                        info: false,
                        order: [],
                        pageLength: 10,
                        columnDefs: [
                            {
                                render: function (data, type, row) {
                                    return data.toLocaleString('vi-VN') + ' <i class="fa-solid fa-dong-sign"></i>';
                                },
                                targets: 3
                            },
                            {
                                orderable: false,
                                targets: 6,
                            },
                        ],
                    });

                    // Reinitialize delete handlers on table draw
                    dataTable.on("draw", function () {
                        initDeleteRow();
                    });

                    // Search functionality
                    document
                        .querySelector('[data-filter="search"]')
                        .addEventListener("keyup", function (e) {
                            dataTable.search(e.target.value).draw();
                        });

                    // Status filter
                    const statusFilter = document.querySelector('[data-filter="status"]');
                    $(statusFilter).on("change", function (e) {
                        let value = e.target.value;
                        if (value === "all") {
                            value = "";
                        }
                        // Map status to Published/Inactive
                        dataTable.column(6).search(value).draw();
                    });

                    // Initial call to set up delete handlers
                    initDeleteRow();
                },
            };
        })();

        // Initialize on DOM content loaded
        KTUtil.onDOMContentLoaded(function () {
            KTAppAccommodations.init();
        });
    </script>

    <script>
        setTimeout(() => {
            const toastEl = document.querySelector('.toast');
            if (toastEl) {
                const bsToast = bootstrap.Toast.getOrCreateInstance(toastEl);
                bsToast.hide();
            }
        }, 5000);
    </script>

}
@{
    var toastMessage = TempData["NotificationMessage"] as string;
    var toastType = TempData["NotificationType"] as string ?? "info";

    var toastIcon = toastType switch
    {
        "success" => "fa-circle-check",
        "error" => "fa-circle-exclamation",
        "warning" => "fa-triangle-exclamation",
        _ => "fa-circle-info"
    };

    var toastBg = toastType switch
    {
        "success" => "bg-success",
        "error" => "bg-danger",
        "warning" => "bg-warning text-dark",
        _ => "bg-info text-dark"
    };

    var toastColor = toastType switch
    {
        "success" => "success",
        "error" => "danger",
        "warning" => "warning text-dark",
        _ => "info text-dark"
    };
}

@if (!string.IsNullOrEmpty(toastMessage))
{
    <div class="position-fixed top-0 end-0 p-3" style="z-index: 1080;">
        <div class="toast show fade" role="alert" aria-live="assertive" aria-atomic="true" data-bs-autohide="true"
            data-bs-delay="5000">
            <div class="toast-header text-@toastColor">
                <i class="fa-solid @toastIcon me-2 text-@toastColor"></i>
                <strong class="me-auto text-capitalize">@toastType</strong>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body">
                @toastMessage
            </div>
        </div>
    </div>
}

<div class="card card-flush">
    <!--begin::Card header-->
    <div class="card-header align-items-center py-5 gap-2 gap-md-5">
        <!--begin::Card title-->
        <div class="card-title">
            <!--begin::Search-->
            <div class="d-flex align-items-center position-relative my-1">
                <i class="fa-solid fa-magnifying-glass position-absolute ms-4"></i>
                <input type="text" data-filter="search" class="form-control form-control-solid w-250px ps-12"
                    placeholder="Search Accommodation" />
            </div>
            <!--end::Search-->
        </div>
        <!--end::Card title-->

        <!--begin::Card toolbar-->
        <div class="card-toolbar flex-row-fluid justify-content-end gap-5">
            <!--begin::Add accommodation-->
            <a asp-action="Create" class="btn btn-primary">
                Add Accommodation
            </a>
            <!--end::Add accommodation-->
        </div>
        <!--end::Card toolbar-->
    </div>
    <!--end::Card header-->

    <!--begin::Card body-->
    <div class="card-body pt-0">
        <!--begin::Table-->
        <div id="kt_ecommerce_products_table_wrapper" class="dt-container dt-bootstrap5 dt-empty-footer">
            <div class="table-responsive">
                <table class="table align-middle table-row-dashed fs-6 gy-5 dataTable" id="kt_ecommerce_products_table"
                    style="width: 100%">
                    <colgroup>
                        <col data-dt-column="1" />
                        <col data-dt-column="3" />
                        <col data-dt-column="4" />
                        <col data-dt-column="5" />
                        <col data-dt-column="6" />
                        <col data-dt-column="7" />
                    </colgroup>
                    @Html.Partial("Partial/Index/_AccommodationTableHeader")

                    <tbody class="fw-semibold text-gray-600">
                        @foreach (var accommodation in Model)
                        {
                            @Html.Partial("Partial/Index/_AccommodationTableRow", accommodation)
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>